

1. get_ascii: ASCII handler function (one input) 
	-i <- checks for everything that is convertible
	-IF CLAUSE NOT CLEAR?????? answered below
	-returns latin1 to utf8 conversion
	
2. get_utf8: utf8 encoded (one input)
	- returns latin1 to utf8 encoding
	
3. wtoken: tokenize by word
	- remove .,?:;()[]+*{} and to lower
	- remove spaces "[ ]{2,}": matches space at least 2 times, "[ ]${1,}": matches space at
		the end of line at least one time
	- remove dashes
	- splits string into words
	- converts to utf8 and returns
	
4. filter for stopwords (one input)
	- if fullstop == TRUE: return all the words that are not stopwords
	- remove punctuation: [[:punct:]] finds all punctuation
	- WHAT DOES Q[VAPPLY(Q, LENGTH, DOUBLE(1)) == 0] <- NA_CHARACTER_ DO?????	
	
5. word counts (one input) 
	- length(double(1)) = 1, length(double(2)) = 2 etc...
	- vapply(aux$q1_token[1], length, double(1)) e.g. gives number of words
	
6. word count diff (two inputs)
	- if any of the two questions is NA, return 0
	- else return number of word difference
	
7. character count diff (two inputs)
	- works equally to word count diff
	
8. count matches (two inputs)
	- return 0 if there are no matches
	- otherwise returns number of matches. Why does he do q1 %in% q2 and then vice versa?????
	
9. random sample (one input)
	- outputs randomly sampled rows of the input data, seq_len(10) = 1,2,3,4,…,10

10. match big words (two inputs)
	- bigword extracts biggest word
	- pc extracts biggest words by order
	- f1 matches biggest word from q1 with word from q2 and vice versa
	- f2 applies f1 with q1 and q2 as input and returns

11. chunked (two inputs)
	- f0 string split
	- enlist
	- f1 
	FORGET CHUNKER

12. wwwww (two inputs)
	- compares if one question word  appears in both questions
	- outputs sum of 

13. first word match

14. last word match

15.  






-> function that detects countries, if they appear in both questions
-> generate wordcloud in order to figure out word families: https://www.kaggle.com/anokas/quora-question-pairs/data-analysis-xgboost-starter-0-35460-lb
-> if set(question1) contains set of question2 and reverse —> 1
-> 